# Makefile for Sphinx documentation
#

# from date chosen to be zero second from midnight
# to date chosen to be one second before midnight
#FROM_DATE     = 20121001
#TO_DATE       = 20121231

RESOURCES      = sierra india hotel alamo foxtrot
#RESOURCES      = p434fall13

#SERVICES	= openstack eucalyptus nimbus
#SERVICES	= openstack

#TEMPLATE       = portal # for web
TEMPLATE       = xsede # for pdf

# You can set these variables from the command line.
SPHINXOPTS    =
SPHINXBUILD   = sphinx-build
PAPER         =
BUILDDIR      = _build_$(FROM_DATE)_$(TO_DATE)

# Latest CM Cloud Metrics should be installed to run Makefile.
CMMETRIC      = fg-metric
PHANTOMJS     = phantomjs
HTMLPATH      = output
IMGPATH       = images
REPORTPATH1   = reports/cmd
REPORTPATH2   = reports/rst
PYTHON        = python
#REPORTGENERATOR = $(PYTHON) ReportGenerator.py -n $(RESOURCES) -s $(SERVICES) -t $(TEMPLATE) --from $(FROM_DATE)T00:00:00 --to $(TO_DATE)T23:59:59
REPORTGENERATOR = $(PYTHON) ReportGenerator.py -n $(RESOURCES) -t $(TEMPLATE) --from $(FROM_DATE)T00:00:00 --to $(TO_DATE)T23:59:59

# Internal variables.
PAPEROPT_a4     = -D latex_paper_size=a4
PAPEROPT_letter = -D latex_paper_size=letter
ALLSPHINXOPTS   = -d $(BUILDDIR)/doctrees $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .
# the i18n builder cannot share the environment and doctrees with the others
I18NSPHINXOPTS  = $(PAPEROPT_$(PAPER)) $(SPHINXOPTS) .

.PHONY: help clean html dirhtml singlehtml pickle json htmlhelp qthelp devhelp epub latex latexpdf text man changes linkcheck doctest gettext

help:
	@echo "Please use \`make <target>' where <target> is one of"
	@echo "  html       to make standalone HTML files"
	@echo "  dirhtml    to make HTML files named index.html in directories"
	@echo "  singlehtml to make a single large HTML file"
	@echo "  pickle     to make pickle files"
	@echo "  json       to make JSON files"
	@echo "  htmlhelp   to make HTML files and a HTML help project"
	@echo "  qthelp     to make HTML files and a qthelp project"
	@echo "  devhelp    to make HTML files and a Devhelp project"
	@echo "  epub       to make an epub"
	@echo "  latex      to make LaTeX files, you can set PAPER=a4 or PAPER=letter"
	@echo "  latexpdf   to make LaTeX files and run them through pdflatex"
	@echo "  text       to make text files"
	@echo "  man        to make manual pages"
	@echo "  texinfo    to make Texinfo files"
	@echo "  info       to make Texinfo files and run them through makeinfo"
	@echo "  gettext    to make PO message catalogs"
	@echo "  changes    to make an overview of all changed/added/deprecated items"
	@echo "  linkcheck  to check all external links for integrity"
	@echo "  doctest    to run all doctests embedded in the documentation (if enabled)"

clean: cleanmain cleandata

cleanmain:
	-rm -rf $(BUILDDIR)/*

cleandata:
	-rm -rf $(HTMLPATH)/*
	-rm -rf $(IMGPATH)/*
	-rm -rf $(REPORTPATH1)/*
	-rm -rf $(REPORTPATH2)/*

createdirectory:
	mkdir -p $(HTMLPATH)
	mkdir -p $(IMGPATH)
	mkdir -p $(REPORTPATH1)
	mkdir -p $(REPORTPATH2)

generatereport:
	$(REPORTGENERATOR)
	@echo
	@echo "$(REPORTGENERATOR) executed."
data:
	@echo
	@echo "Start generating data..."
	cat reports/cmd/*.txt | $(CMMETRIC) 
	@echo
	@echo "All data generated."

injectJs:
	perl -pi -e 's#../../../../../../_static/js/jquery-1.7.2.min.js#http://code.jquery.com/jquery-1.7.2.min.js#' $(HTMLPATH)/*.html
	perl -pi -e 's#../../../../../../_static/js/highcharts.js#http://code.highcharts.com/highcharts.js#' $(HTMLPATH)/*.html
	perl -pi -e 's#../../../../../../_static/js/modules/exporting.js#http://code.highcharts.com/modules/exporting.js#' $(HTMLPATH)/*.html
	@echo
	@echo "Local path of js converted to global links"

html2png:
	@echo
	@echo "Start to convert html pages to PNG images using phantomjs..."
	#Temporary for handling legend in charts
	perl -pi -e 's#x: -100#x: -50#' $(HTMLPATH)/*.html
	find $(HTMLPATH)/*.html -exec $(PHANTOMJS) rasterizefromfile.js {} $(IMGPATH)/{}.png \; 
	find $(IMGPATH)/$(HTMLPATH)/*.png -exec rename -f 's/\.html\.png/\.png/' .png {} \;
	@echo
	@echo "All html pages are rendered to PNG images."

reportonly: injectJs html2png latexpdf

report: cleandata createdirectory generatereport data injectJs html2png latexpdf

html:
	$(SPHINXBUILD) -b html $(ALLSPHINXOPTS) $(BUILDDIR)/html
	@echo
	@echo "Build finished. The HTML pages are in $(BUILDDIR)/html."

dirhtml:
	$(SPHINXBUILD) -b dirhtml $(ALLSPHINXOPTS) $(BUILDDIR)/dirhtml
	@echo
	@echo "Build finished. The HTML pages are in $(BUILDDIR)/dirhtml."

singlehtml:
	$(SPHINXBUILD) -b singlehtml $(ALLSPHINXOPTS) $(BUILDDIR)/singlehtml
	@echo
	@echo "Build finished. The HTML page is in $(BUILDDIR)/singlehtml."

pickle:
	$(SPHINXBUILD) -b pickle $(ALLSPHINXOPTS) $(BUILDDIR)/pickle
	@echo
	@echo "Build finished; now you can process the pickle files."

json:
	$(SPHINXBUILD) -b json $(ALLSPHINXOPTS) $(BUILDDIR)/json
	@echo
	@echo "Build finished; now you can process the JSON files."

htmlhelp:
	$(SPHINXBUILD) -b htmlhelp $(ALLSPHINXOPTS) $(BUILDDIR)/htmlhelp
	@echo
	@echo "Build finished; now you can run HTML Help Workshop with the" \
	      ".hhp project file in $(BUILDDIR)/htmlhelp."

qthelp:
	$(SPHINXBUILD) -b qthelp $(ALLSPHINXOPTS) $(BUILDDIR)/qthelp
	@echo
	@echo "Build finished; now you can run "qcollectiongenerator" with the" \
	      ".qhcp project file in $(BUILDDIR)/qthelp, like this:"
	@echo "# qcollectiongenerator $(BUILDDIR)/qthelp/Sierra6monthsReport.qhcp"
	@echo "To view the help file:"
	@echo "# assistant -collectionFile $(BUILDDIR)/qthelp/Sierra6monthsReport.qhc"

devhelp:
	$(SPHINXBUILD) -b devhelp $(ALLSPHINXOPTS) $(BUILDDIR)/devhelp
	@echo
	@echo "Build finished."
	@echo "To view the help file:"
	@echo "# mkdir -p $$HOME/.local/share/devhelp/Sierra6monthsReport"
	@echo "# ln -s $(BUILDDIR)/devhelp $$HOME/.local/share/devhelp/Sierra6monthsReport"
	@echo "# devhelp"

epub:
	$(SPHINXBUILD) -b epub $(ALLSPHINXOPTS) $(BUILDDIR)/epub
	@echo
	@echo "Build finished. The epub file is in $(BUILDDIR)/epub."

latex:
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo
	@echo "Build finished; the LaTeX files are in $(BUILDDIR)/latex."
	@echo "Run \`make' in that directory to run these through (pdf)latex" \
	      "(use \`make latexpdf' here to do that automatically)."

latexpdf:
	$(SPHINXBUILD) -b latex $(ALLSPHINXOPTS) $(BUILDDIR)/latex
	@echo "Running LaTeX files through pdflatex..."
	$(MAKE) -C $(BUILDDIR)/latex all-pdf
	@echo "pdflatex finished; the PDF files are in $(BUILDDIR)/latex."

text:
	$(SPHINXBUILD) -b text $(ALLSPHINXOPTS) $(BUILDDIR)/text
	@echo
	@echo "Build finished. The text files are in $(BUILDDIR)/text."

man:
	$(SPHINXBUILD) -b man $(ALLSPHINXOPTS) $(BUILDDIR)/man
	@echo
	@echo "Build finished. The manual pages are in $(BUILDDIR)/man."

texinfo:
	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
	@echo
	@echo "Build finished. The Texinfo files are in $(BUILDDIR)/texinfo."
	@echo "Run \`make' in that directory to run these through makeinfo" \
	      "(use \`make info' here to do that automatically)."

info:
	$(SPHINXBUILD) -b texinfo $(ALLSPHINXOPTS) $(BUILDDIR)/texinfo
	@echo "Running Texinfo files through makeinfo..."
	make -C $(BUILDDIR)/texinfo info
	@echo "makeinfo finished; the Info files are in $(BUILDDIR)/texinfo."

gettext:
	$(SPHINXBUILD) -b gettext $(I18NSPHINXOPTS) $(BUILDDIR)/locale
	@echo
	@echo "Build finished. The message catalogs are in $(BUILDDIR)/locale."

changes:
	$(SPHINXBUILD) -b changes $(ALLSPHINXOPTS) $(BUILDDIR)/changes
	@echo
	@echo "The overview file is in $(BUILDDIR)/changes."

linkcheck:
	$(SPHINXBUILD) -b linkcheck $(ALLSPHINXOPTS) $(BUILDDIR)/linkcheck
	@echo
	@echo "Link check complete; look for any errors in the above output " \
	      "or in $(BUILDDIR)/linkcheck/output.txt."

doctest:
	$(SPHINXBUILD) -b doctest $(ALLSPHINXOPTS) $(BUILDDIR)/doctest
	@echo "Testing of doctests in the sources finished, look at the " \
	      "results in $(BUILDDIR)/doctest/output.txt."
